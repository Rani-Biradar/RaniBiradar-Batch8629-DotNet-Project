<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>